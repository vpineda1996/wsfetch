# ####################################
# 
#          Common Schema
#
# ####################################

type PageInfo {
    hasNextPage: Boolean!
    endCursor: String!
}

# ####################################
# 
#          Identity Schema
#
# ####################################
type AccountOwner {
    accountId: String!
    accountNickname: String!
    accountOpeningAgreementsSigned: Boolean!
    clientCanonicalId: String!
    email: String!
    identityId: String!
    name: String!
    ownershipType: String!
}

type AccountFeature {
    name: String!
    enabled: Boolean!
}

type Account {
    accountFeatures: [AccountFeature!]!
    accountOwnerConfiguration: String
    accountOwners: [AccountOwner!]!
    applicationFamilyId: String!
    archivedAt: String
    branch: String!
    cacheExpiredAt: String!
    category: String!
    closedAt: String
    createdAt: String!
    currency: String!
    id: String!
    nickname: String
    requiredIdentityVerification: String!
    status: String!
    type: String!
    unifiedAccountType: String!
    updatedAt: String!

    linkedAccount: Account
    custodianAccounts: [Account!]!
}

type AccountEdge {
    cursor: String!
    node: Account!
}

type AccountConnection {
    edges: [AccountEdge!]!
    pageInfo: PageInfo!
}

# TODO: Figure out what fields the accounts filter should have
input AccountsFilter {
    stub: String
}

type Identity {
    id: ID!
    accounts(filter: AccountsFilter, first: Int, after: String): AccountConnection!
}

# ####################################
# 
#         Cash Activity Schema
#
# ####################################

type ActivityFeedItem {
  accountId: String!
  aftOriginatorName: String
  aftTransactionCategory: String
  aftTransactionType: String
  amount: String!
  amountSign: String!
  assetQuantity: String
  assetSymbol: String
  canonicalId: String
  currency: String
  eTransferEmail: String
  eTransferName: String
  externalCanonicalId: String
  identityId: String!
  institutionName: String
  occurredAt: Datetime!
  p2pHandle: String
  p2pMessage: String
  spendMerchant: String
  securityId: String
  billPayCompanyName: String
  billPayPayeeNickname: String
  redactedExternalAccountNumber: String
  opposingAccountId: String
  status: String
  subType: String
  type: String!
  strikePrice: String
  contractType: String
  expiryDate: String
  chequeNumber: String
  provisionalCreditAmount: String
  primaryBlocker: String
  interestRate: String
  frequency: String
}

type ActivitiesEdge {
  node: ActivityFeedItem!
}

type ActivitiesConnection {
  pageInfo: PageInfo!
  edges: [ActivitiesEdge!]!
}

# ####################################
# 
#               Queries
#
# ####################################

scalar ActivityFeedItemType
scalar ActivityFeedItemSubType
scalar Datetime
scalar Cursor

type Query {
    # Fetch account information
    identity(id: ID): Identity!
    # Fetch account acctivity
    activities(
        first: Int!
        after: Cursor
        accountIds: [String!]
        endDate: Datetime
        startDate: Datetime!
  ): ActivitiesConnection
}